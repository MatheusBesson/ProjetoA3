/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;
import Model.*;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pedro
 */
public class GerenciaMouse extends javax.swing.JFrame {

    private Mouse objMouse;
    public GerenciaMouse() {
        initComponents();
        this.objMouse=new Mouse();
        this.carregaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nome_GM = new javax.swing.JTextField();
        marca_GM = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMouse_GM = new javax.swing.JTable();
        preco_GM = new javax.swing.JTextField();
        modelo_GM = new javax.swing.JTextField();
        qtdestoque_GM = new javax.swing.JTextField();
        tipo_GM = new javax.swing.JComboBox<>();
        dpi_GM = new javax.swing.JTextField();
        descricao_GM = new javax.swing.JTextField();
        botoes_GM = new javax.swing.JTextField();
        datacadastro_GM = new com.toedter.calendar.JDateChooser();
        b_deletar_GT = new javax.swing.JButton();
        b_cancelar_GT = new javax.swing.JButton();
        b_alterar_GT = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(880, 590));

        nome_GM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nome_GMActionPerformed(evt);
            }
        });

        jTableMouse_GM.setBackground(new java.awt.Color(204, 204, 204));
        jTableMouse_GM.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jTableMouse_GM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Tipo", "Marca", "Modelo", "Preço", "Quant. Estoque", "Data de cadastro", "Descrição", "Quant. de botões", "Dpi máximo"
            }
        ));
        jTableMouse_GM.setGridColor(new java.awt.Color(102, 102, 102));
        jTableMouse_GM.setMinimumSize(new java.awt.Dimension(165, 60));
        jTableMouse_GM.setSelectionBackground(new java.awt.Color(204, 51, 0));
        jTableMouse_GM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouse_GMMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMouse_GM);

        tipo_GM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mouse" }));
        tipo_GM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipo_GMActionPerformed(evt);
            }
        });

        descricao_GM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descricao_GMActionPerformed(evt);
            }
        });

        datacadastro_GM.setDateFormatString("dd/MM/yyyy");

        b_deletar_GT.setText("Deletar");
        b_deletar_GT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_deletar_GTActionPerformed(evt);
            }
        });

        b_cancelar_GT.setText("Cancelar");
        b_cancelar_GT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelar_GTActionPerformed(evt);
            }
        });

        b_alterar_GT.setText("Alterar");
        b_alterar_GT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_alterar_GTActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome do produto:");

        jLabel2.setText("Marca:");

        jLabel3.setText("Modelo:");

        jLabel4.setText("Preço:");

        jLabel5.setText("Nome do produto:");

        jLabel6.setText("Quant. Estoque:");

        jLabel7.setText("Data de cadastro:");

        jLabel8.setText("Quantidade de Botões:");

        jLabel9.setText("Dpi máximo:");

        jLabel10.setText("Descrição (opcional):");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_cancelar_GT, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nome_GM)
                            .addComponent(marca_GM)
                            .addComponent(modelo_GM)
                            .addComponent(preco_GM)
                            .addComponent(qtdestoque_GM)
                            .addComponent(datacadastro_GM, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dpi_GM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botoes_GM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(descricao_GM, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(224, 224, 224))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(b_alterar_GT, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(b_deletar_GT, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipo_GM, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tipo_GM, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botoes_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dpi_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descricao_GM, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nome_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(marca_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(preco_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(qtdestoque_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(datacadastro_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(modelo_GM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_cancelar_GT)
                    .addComponent(b_deletar_GT)
                    .addComponent(b_alterar_GT))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tipo_GMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipo_GMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipo_GMActionPerformed

    private void b_deletar_GTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_deletar_GTActionPerformed

        try {
            // validando dados da interface gr�fica.
            int id = 0;
            if (this.jTableMouse_GM.getSelectedRow() == -1) {
                throw new Mensagens("Primeiro Selecione um Mouse para APAGAR");
            } else {
                id = Integer.parseInt(this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 0).toString());
            }
            // retorna 0 -> primeiro botão | 1 -> segundo botão | 2 -> terceiro botão
            int resposta_usuario = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja APAGAR este Mouse?");

            if (resposta_usuario == 0) {// clicou em SIM

                // envia os dados para o Teclado processar
                if (this.objMouse.DeleteMouseBD(id)) {

                    // limpa os campos
                    this.nome_GM.setText("");
                    this.tipo_GM.setSelectedItem("Mouse");
                    this.marca_GM.setText("");
                    this.modelo_GM.setText("");
                    this.preco_GM.setText("");
                    this.qtdestoque_GM.setText("");
                    this.datacadastro_GM.setDate(null);
                    this.descricao_GM.setText("");
                    this.botoes_GM.setText("");
                    this.dpi_GM.setText("");
                    JOptionPane.showMessageDialog(rootPane, "Teclado Apagado com Sucesso!");

                }

            }
            System.out.println(this.objMouse.getListaMouse().toString());

        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } finally {
            // atualiza a tabela.
            carregaTabela();

        }
    }//GEN-LAST:event_b_deletar_GTActionPerformed

    private void b_cancelar_GTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelar_GTActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_b_cancelar_GTActionPerformed

    private void b_alterar_GTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_alterar_GTActionPerformed

        try {

            // recebendo e validando dados da interface grafica.
            int id = 0;
            String nome_mouse = "";
            String marca_mouse = "";
            String modelo_mouse = "";
            float preco_mouse = 0;
            int qtd_estoque_mouse = 0;
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String datacadastro_mouse = sdf.format(datacadastro_GM.getDate());
            String descricao_mouse = "";
            int botoes_mouse = 0;
            int dpi_mouse = 0;
            String tipo_mouse;

            if (this.nome_GM.getText().length() < 2 || this.nome_GM.getText().length() > 45) {
                throw new Mensagens("Nome deve conter entre DOIS a QUARENTA E CINCO caracteres!");
            } else {
                nome_mouse = this.nome_GM.getText();
            }
            if (this.tipo_GM.getSelectedItem() == "Mouse") {
                tipo_mouse = this.tipo_GM.getSelectedItem().toString();
            } else {
                throw new Mensagens("Tipo de produto inválido!");
            }
            if (this.preco_GM.getText().length() < 1 || this.preco_GM.getText().length() > 50000) {
                throw new Mensagens("O preço não pode ser menor que UM ou maior que CINQUENTA MIL!");
            } else {
                preco_mouse = Float.parseFloat(this.preco_GM.getText());
            }
            if (this.descricao_GM.getText().length() > 250) {
                throw new Mensagens("Descrição muito longa! Máximo 250 caracteres!");
            }
            descricao_mouse = this.descricao_GM.getText();

            if (this.marca_GM.getText().length() < 2 || this.marca_GM.getText().length() > 45) {
                throw new Mensagens("A declaração de marca deve conter entre DOIS a QUARENTA E CINCO caracteres!");
            } else {
                marca_mouse = this.marca_GM.getText();
            }

            if (this.modelo_GM.getText().length() < 2 || this.modelo_GM.getText().length() > 45) {
                throw new Mensagens("A declaração de modelo deve conter entre DOIS a QUARENTA E CINCO caracteres!");
            } else {
                modelo_mouse = this.modelo_GM.getText();
            }

            if (this.qtdestoque_GM.getText().length() <= 0) {
                throw new Mensagens("O estoque deve ser MAIOR que ZERO!");

            } else {
                qtd_estoque_mouse = Integer.parseInt(this.qtdestoque_GM.getText());
            }

            if (this.datacadastro_GM.getDate() == null) {
                throw new Mensagens("A data precisa ser selecionada!");

            } else {
                datacadastro_mouse = sdf.format(this.datacadastro_GM.getDate());
            }

            int botaoqnt = Integer.parseInt(this.botoes_GM.getText());
                if (botaoqnt < 2 && botaoqnt >8 ) {
        
                throw new Mensagens("A quantidade de botões deve ser entre 2 a 8");
       } else {
        botoes_mouse = botaoqnt;
    }
             if (this.dpi_GM.getText().length() <4  && this.dpi_GM.getText().length() > 5) { 
        throw new Mensagens("O campo de dpi deve conter entre 4 a 5 caracteres!");
    } else {
        dpi_mouse = Integer.parseInt(this.dpi_GM.getText());
    }                  
            if (this.jTableMouse_GM.getSelectedRow() == -1) {
                throw new Mensagens("Primeiro Selecione um Item para Alterar");
            } else {
                id = Integer.parseInt(this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 0).toString());
            }

            if (this.objMouse.UpdateMouseBD(botoes_mouse, dpi_mouse, id, nome_mouse, tipo_mouse, preco_mouse, descricao_mouse, marca_mouse, modelo_mouse, qtd_estoque_mouse, datacadastro_mouse)) {
                JOptionPane.showMessageDialog(rootPane, "Mouse Alterado com Sucesso!");

                this.nome_GM.setText("");
                this.marca_GM.setText("");
                this.modelo_GM.setText("");
                this.preco_GM.setText("");
                this.qtdestoque_GM.setText("");
                this.datacadastro_GM.setDate(null);
                this.descricao_GM.setText("");
                this.botoes_GM.setText("");
                this.dpi_GM.setText("");
                this.tipo_GM.setSelectedItem("Mouse");
            }

            System.out.println(this.objMouse.getListaMouse().toString());

        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Preencha o campo usando números!");
        } catch (NullPointerException erroNull) {
            JOptionPane.showMessageDialog(null, "Preencha o campo data!");
        } catch (SQLException ex) {
            Logger.getLogger(GerenciaTeclado.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            // atualiza a tabela.
            carregaTabela();
        }
        
    }//GEN-LAST:event_b_alterar_GTActionPerformed

    private void descricao_GMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descricao_GMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descricao_GMActionPerformed

    private void nome_GMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nome_GMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nome_GMActionPerformed

    private void jTableMouse_GMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouse_GMMouseClicked
        if (this.jTableMouse_GM.getSelectedRow() != -1) {

            String nome = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 1).toString();
            String tipo = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 2).toString();
            String marca = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 3).toString();
            String modelo = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 4).toString();
            String preco = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 5).toString();
            String qtd_estoque = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 6).toString();
            String data_cadastroString = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 7).toString();
            String descricao = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 8).toString();
            String botoes = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 9).toString();
            String dpi = this.jTableMouse_GM.getValueAt(this.jTableMouse_GM.getSelectedRow(), 10).toString();
            Date data_cadastro = null;

            this.nome_GM.setText(nome);
            this.tipo_GM.setSelectedItem(tipo);
            this.marca_GM.setText(marca);
            this.modelo_GM.setText(modelo);
            this.preco_GM.setText(preco);
            this.qtdestoque_GM.setText(qtd_estoque);
            try {
                data_cadastro = new SimpleDateFormat("yyyy-MM-dd").parse(data_cadastroString);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao converter a data: ");
            }
            this.datacadastro_GM.setDate(data_cadastro);
            this.descricao_GM.setText(descricao);
            this.botoes_GM.setText(botoes);
            this.dpi_GM.setText(dpi);
        }
    }//GEN-LAST:event_jTableMouse_GMMouseClicked
public void carregaTabela() {

        DefaultTableModel modelo = (DefaultTableModel) this.jTableMouse_GM.getModel();
        modelo.setNumRows(0);

        ArrayList<Mouse> listaMouse = new ArrayList<>();
        listaMouse = objMouse.getListaMouse();

        for (Mouse a : listaMouse) {
            modelo.addRow(new Object[]{
                a.getId(),
                a.getNome(),
                a.getTipo(),
                a.getMarca(),
                a.getModelo(),
                a.getPreco(),
                a.getQtd_estoque(),
                a.getData_cadastro(),
                a.getDescricao(),
                a.getBotoes(),
                a.getDpi(),});
        }
    }

   
    public static void main(String args[]) {       
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciaMouse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_alterar_GT;
    private javax.swing.JButton b_cancelar_GT;
    private javax.swing.JButton b_deletar_GT;
    private javax.swing.JTextField botoes_GM;
    private com.toedter.calendar.JDateChooser datacadastro_GM;
    private javax.swing.JTextField descricao_GM;
    private javax.swing.JTextField dpi_GM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMouse_GM;
    private javax.swing.JTextField marca_GM;
    private javax.swing.JTextField modelo_GM;
    private javax.swing.JTextField nome_GM;
    private javax.swing.JTextField preco_GM;
    private javax.swing.JTextField qtdestoque_GM;
    private javax.swing.JComboBox<String> tipo_GM;
    // End of variables declaration//GEN-END:variables
}
