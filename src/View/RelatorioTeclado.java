/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.Fone_de_OuvidoDAO;
import DAO.TecladoDAO;
import Model.Fone_de_Ouvido;
import Model.Teclado;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rodri
 */
public class RelatorioTeclado extends javax.swing.JFrame {

    /**
     * Creates new form RelatorioTeclado
     */
    public RelatorioTeclado() {
        initComponents();
        carregaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTeclado_RE = new javax.swing.JTable();
        b_OrderByID = new javax.swing.JButton();
        B_OrderByPrice = new javax.swing.JButton();
        b_Produtos_Esgotados = new javax.swing.JButton();
        lblQuantidadeTotalEstoque = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1176, 621));
        setMinimumSize(new java.awt.Dimension(1176, 621));
        getContentPane().setLayout(null);

        jLabel10.setForeground(new java.awt.Color(255, 102, 0));
        jLabel10.setText("Épic Perifericos @");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(1020, 560, 110, 20);

        jTableTeclado_RE.setBackground(new java.awt.Color(204, 204, 204));
        jTableTeclado_RE.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jTableTeclado_RE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Tipo", "Marca", "Modelo", "Preço", "Quant. Estoque", "Data de cadastro", "Descrição", "Dimensão", "Conectividade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTeclado_RE.setGridColor(new java.awt.Color(102, 102, 102));
        jTableTeclado_RE.setSelectionBackground(new java.awt.Color(204, 51, 0));
        jTableTeclado_RE.getTableHeader().setReorderingAllowed(false);
        jTableTeclado_RE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTeclado_REMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTeclado_RE);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 1140, 450);

        b_OrderByID.setBackground(new java.awt.Color(255, 102, 0));
        b_OrderByID.setText("Ordenar por ID");
        b_OrderByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_OrderByIDActionPerformed(evt);
            }
        });
        getContentPane().add(b_OrderByID);
        b_OrderByID.setBounds(530, 480, 150, 25);

        B_OrderByPrice.setBackground(new java.awt.Color(255, 102, 0));
        B_OrderByPrice.setText("Ordenar por Preço");
        B_OrderByPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_OrderByPriceActionPerformed(evt);
            }
        });
        getContentPane().add(B_OrderByPrice);
        B_OrderByPrice.setBounds(530, 510, 150, 25);

        b_Produtos_Esgotados.setBackground(new java.awt.Color(255, 102, 0));
        b_Produtos_Esgotados.setText("Produtos Esgotados");
        b_Produtos_Esgotados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_Produtos_EsgotadosActionPerformed(evt);
            }
        });
        getContentPane().add(b_Produtos_Esgotados);
        b_Produtos_Esgotados.setBounds(530, 540, 150, 25);

        lblQuantidadeTotalEstoque.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblQuantidadeTotalEstoque.setForeground(new java.awt.Color(255, 102, 0));
        lblQuantidadeTotalEstoque.setText("Quantidade Total do Estoque:");
        getContentPane().add(lblQuantidadeTotalEstoque);
        lblQuantidadeTotalEstoque.setBounds(30, 470, 370, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Abstract-HD-Black-And-Red-Wallpapers.jpg.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -4, 1180, 630);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableTeclado_REMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTeclado_REMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableTeclado_REMouseClicked

    private void b_OrderByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_OrderByIDActionPerformed
        TecladoDAO dao = new TecladoDAO();
        ArrayList<Teclado> listaTeclado = dao.getListaOrdenadaPorID();

        // Limpar a tabela
        DefaultTableModel modelo = (DefaultTableModel) this.jTableTeclado_RE.getModel();
        modelo.setRowCount(0);

        for (Teclado a : listaTeclado) {
            modelo.addRow(new Object[]{
                a.getId(),
                a.getNome(),
                a.getTipo(),
                a.getPreco(),
                a.getDescricao(),
                a.getMarca(),
                a.getModelo(),
                a.getQtd_estoque(),
                a.getData_cadastro(),
                a.getDimensao(),
                a.getConectividade(),});
        }
    }//GEN-LAST:event_b_OrderByIDActionPerformed

    private void B_OrderByPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_OrderByPriceActionPerformed
        TecladoDAO dao = new TecladoDAO();
        ArrayList<Teclado> listaTeclado = dao.getListaOrdenadaPorPreco();

        // Limpar a tabela
        DefaultTableModel modelo = (DefaultTableModel) this.jTableTeclado_RE.getModel();
        modelo.setRowCount(0);
        // Adicionar os dados ordenados à tabela
        for (Teclado a : listaTeclado) {
            modelo.addRow(new Object[]{
                a.getId(),
                a.getNome(),
                a.getTipo(),
                a.getPreco(),
                a.getDescricao(),
                a.getMarca(),
                a.getModelo(),
                a.getQtd_estoque(),
                a.getData_cadastro(),
                a.getDimensao(),
                a.getConectividade(),});
        }

    }//GEN-LAST:event_B_OrderByPriceActionPerformed

    private void b_Produtos_EsgotadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_Produtos_EsgotadosActionPerformed
        TecladoDAO dao = new TecladoDAO();
        ArrayList<Teclado> listaProdutosEsgotados = dao.getProdutosEsgotados();

        // Limpar a tabela
        DefaultTableModel modelo = (DefaultTableModel) this.jTableTeclado_RE.getModel();
        modelo.setRowCount(0);
        // Adicionar os produtos esgotados à tabela
        for (Teclado produto : listaProdutosEsgotados) {
            modelo.addRow(new Object[]{
                produto.getId(),
                produto.getNome(),
                produto.getTipo(),
                produto.getPreco(),
                produto.getDescricao(),
                produto.getMarca(),
                produto.getModelo(),
                produto.getQtd_estoque(),
                produto.getData_cadastro(),
                produto.getDimensao(),
                produto.getConectividade(),});
        }
    }//GEN-LAST:event_b_Produtos_EsgotadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioTeclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioTeclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioTeclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioTeclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatorioTeclado().setVisible(true);
            }
        });
    }

    public void carregaTabela() {
        DefaultTableModel modelo = (DefaultTableModel) this.jTableTeclado_RE.getModel();
        modelo.setNumRows(0);

        TecladoDAO dao = new TecladoDAO();
        ArrayList<Teclado> listaTeclado = dao.getListaOrdenadaPorID();

        int quantidadeTotalEstoque = 0; // Inicializa a quantidade total do estoque

        for (Teclado a : listaTeclado) {
            modelo.addRow(new Object[]{
                a.getId(),
                a.getNome(),
                a.getTipo(),
                a.getPreco(),
                a.getDescricao(),
                a.getMarca(),
                a.getModelo(),
                a.getQtd_estoque(),
                a.getData_cadastro(),
                a.getDimensao(),
                a.getConectividade(),});
            quantidadeTotalEstoque += a.getQtd_estoque(); // Adiciona a quantidade de estoque deste produto à quantidade total

        }

        // Atualiza o rótulo com a quantidade total do estoque
        lblQuantidadeTotalEstoque.setText("Quantidade Total do Estoque: " + quantidadeTotalEstoque);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_OrderByPrice;
    private javax.swing.JButton b_OrderByID;
    private javax.swing.JButton b_Produtos_Esgotados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTeclado_RE;
    private javax.swing.JLabel lblQuantidadeTotalEstoque;
    // End of variables declaration//GEN-END:variables
}
